{
  "name": "geojson-utils",
  "version": "1.0.2",
  "description": "GeoJSON Utilities for JavaScript",
  "main": "geojson-utils.js",
  "scripts": {
    "test": "node test.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/maxogden/geojson-js-utils.git"
  },
  "keywords": [
    "geojson",
    "geocouch"
  ],
  "author": {
    "name": "Max Ogden"
  },
  "license": "MIT",
  "readmeFilename": "README.textile",
  "readme": "h1. GeoJSON Utilities for JavaScript\n\nHere you will find some functions to help you manipulate and work with GeoJSON objects.\n\nSome algorithms adapted from \"bjwbell/canvas-geolib\":https://github.com/bjwbell/canvas-geolib\n\nh2. How to use!\n\nLoad up in a browser OR `npm install geojson-utils`\n\n<pre>\n  <code>\n    var gju = require('geojson-utils');\n  </pre>\n</code>\n\nYou now have an object named <code>gju</code> that contains all of the helper functions.\n\nRemember, GeoJSON coordinates are ordered [y,x] to comply with the Open Geospatial Consortium's recommendation!\n\nh2. Line intersections\n\n<pre>\n  <code>\n    gju.linesIntersect({ \"type\": \"LineString\", \"coordinates\": [[0, 2], [5, 2]] },\n                     { \"type\": \"LineString\", \"coordinates\": [[3, 0], [3, 4], [4,4], [4,0]] })\n    => [{\"type\":\"Point\",\"coordinates\":[2,3]},{\"type\":\"Point\",\"coordinates\":[2,4]}]\n\n    gju.linesIntersect({ \"type\": \"LineString\", \"coordinates\": [[0, 2], [5, 2]] },\n                     { \"type\": \"LineString\", \"coordinates\": [[0, 0], [5, 0]] })\n    => false\n  </code>\n</pre>\n\nh2. Point in polygon\n\n<pre>\n  <code>\n    gju.pointInPolygon({\"type\":\"Point\",\"coordinates\":[3,3]}, \n                     {\"type\":\"Polygon\", \"coordinates\":[[[0,0],[6,0],[6,6],[0,6]]]})\n    => [{\"type\":\"Point\",\"coordinates\":[3,3]}]\n    gju.pointInPolygon({\"type\":\"Point\",\"coordinates\":[-1,-1]}, \n                     {\"type\":\"Polygon\", \"coordinates\":[[[0,0],[6,0],[6,6],[0,6]]]})\n    => false\n  </code>\n</pre>\n\nh2. Radius filtering\n\nIf you retrieve a bunch of results from a bounding box query (common with R-tree geo DBs), but you want to filter the rectangular result set by circular radius:\n\n<pre>\n  <code>\n    // get the center of the original bounding box\n    var center = gju.rectangleCentroid({\n      \"type\": \"Polygon\",\n      \"coordinates\": [[[-122.677, 45.523], [-122.675, 45.524]]]\n    }),\n    // radius (in meters)\n    radius = 100;\n\n    for (var i in geometryObjectsWithinBBox) {\n      if (gju.geometryWithinRadius(geometryObjectsWithinBBox[i], center, radius)) {\n        // ... do stuff with objects inside the circle\n      } \n    }\n  </code>\n</pre>\n\nh2. Distance between two points\n\nUses the Haversine distance formula to calculate the distance between two points on the Earth's curved surface (as the crow flies, no hills!). Returns the distance in meters.\n\n<pre>\n  <code>    \n    gju.pointDistance({type: 'Point', coordinates:[-122.67738461494446, 45.52319466622903]}, \n                      {type: 'Point', coordinates:[-122.67652630805969, 45.52319466622903]})\n    => 66.86677669313518\n  </code>\n</pre>\n\nh2. and much much more!\n\n* \"example usage with GeoCouch\":https://github.com/maxogden/vmxch/blob/master/lists/radius.js\n\nh4. License\n\nThe MIT License\n\nCopyright (c) 2010 Max Ogden\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.",
  "bugs": {
    "url": "https://github.com/maxogden/geojson-js-utils/issues"
  },
  "_id": "geojson-utils@1.0.2",
  "dist": {
    "shasum": "86ad94a685c2ad6c87df5964c3bc2c1872cfeb6d"
  },
  "_from": "geojson-utils@",
  "_resolved": "https://registry.npmjs.org/geojson-utils/-/geojson-utils-1.0.2.tgz"
}
